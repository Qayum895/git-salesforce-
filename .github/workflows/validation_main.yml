name: validate delta changes in PR
on:
  pull_request:
    branches:
      - main
jobs:
  SFDX-CLI-Deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/setup-node@v4
        with:
          node-version: "20"
      - run: echo "🐧 GitHub Action running on ${{ runner.os }}"
      - run: echo "🔎 Retrieving main Branch from ${{ github.repository }}."
      - uses: actions/checkout@v4
        with:
          ref: main
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Install Salesforce CLI
        run: |
          npm install -g @salesforce/cli
          sf --help
      - name: Setup Python Environment
        run: |
          python3 -m venv venv
          . venv/bin/activate
          pip install --upgrade pip
          pip install xq
          pip install yq
      - run: echo "${{ secrets.SALESFORCE_JWT_SECRET_KEY }}" > server.key
      - run: sf org login jwt --client-id 3MVG9CecKwYCDceQRpL9O8Hfersdjp993muzGTxjN_DugY4Ni375dQAJwajf8TMm7LolxfCmpMRArfrDdoHbC --jwt-key-file server.key --username qayum@primesolution.com --instance-url https://primeonesolution-dev-ed.develop.my.salesforce.com --alias prod
      - name: Install sfdxGitDelta
        run: |
          echo y | sf plugins install sfdx-git-delta
      - name: Generate Delta between main and PR Branch
        run: >
          mkdir -p delta
          sf sgd source delta --to "HEAD" --from "origin/main" --output "delta"

      - name: Install PMD
        run: |
          wget https://github.com/pmd/pmd/releases/download/pmd_releases%2F7.0.0/pmd-bin-7.0.0.zip
          unzip pmd-bin-7.0.0.zip
          echo "PMD Installed Successfully"

      - name: Run PMD Static Code Analysis
        run: |
          ./pmd-bin-7.0.0/bin/pmd check --dir delta/force-app --rulesets pmd/rulesets/apex-ruleset.xml --format text > pmd/reports/pmd-report.txt

      - name: Show PMD Report
        run: |
          cat pmd/reports/pmd-report.txt

      - name: Update API Version in package.xml
        run: |
          sed -i 's|<version>55.0</version>|<version>61.0</version>|g' package/package.xml
          cat package/package.xml
      - name: Validate Delta Components with Specified Tests
        if: ${{ env.RUN_TESTS == 'true' }}
        run: >
          if [ -z "${{ env.TEST_CLASSES }}" ]; then
            echo "No test classes specified. Exiting."
            exit 1
          fi
          echo "Running specified tests: ${{ env.TEST_CLASSES }}"
          sf project deploy validate --manifest package/package.xml --test-level RunSpecifiedTests --tests ${{ env.TEST_CLASSES }} --target-org prod --api-version 61.0